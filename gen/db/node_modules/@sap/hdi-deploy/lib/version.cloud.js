'use strict';


const async = require('async');
const hana_helper = require('./hana-helper.js');
const connections = require('./connections');
const utils = require('./utils');


/**
 * Class to handle the cloud version.
 *
 */
function Version () {
  this.version = '';

  this.setVersion = function (str) {
    this.version = str;
  };

  this.setVersion('');
}

function getFallbackVersion () {
  return new Version();
}

function getVersion (credentials, cb) {
  const other_parameters_in_credentials =  utils.removeManagedCredentials(credentials);
  const client = hana_helper(
    credentials.host,
    credentials.port,
    credentials.hdi_user,
    credentials.hdi_password,
    credentials.certificate,
    credentials.db_hosts,
    credentials.hostname_in_certificate,
    credentials.validate_certificate,
    credentials.encrypt,
    credentials.client_authentication_private_key,
    credentials.client_authentication_certificate,
    other_parameters_in_credentials
  );
  connections.push({client, file: __filename});

  const tasks = [
    client.connect(),
    client.execute('select CLOUD_VERSION from SYS.M_DATABASE')
  ];

  async.series(tasks, function (err, result) {
    client.disconnect();
    const version = getFallbackVersion();

    if (!err) {
      version.setVersion(result[1][0].CLOUD_VERSION);
    } else {
      version.error = err.message;
    }

    cb(null, version);
  });
}

module.exports = {
  getFallbackVersion: getFallbackVersion,
  getVersion: getVersion
};
