'use strict';

const ResultTuple = require('../ResultTuple');

/**
 * A ResultSet row corresponding to TT_LIBRARY_INFORMATION
 */
class LibraryInformationResult {
  /**
   * Constructs a JavaScript object representing a table row.
   * @param {*} resultSet The result of a sql procedure call.
   */
  constructor(resultSet) {
    this.libraryName = resultSet.LIBRARY_NAME;
    this.libraryVersion = resultSet.LIBRARY_VERSION;
    this.pluginId = resultSet.PLUGIN_ID;
    this.pluginVersion = resultSet.PLUGIN_VERSION;
  }

  /**
   * Return a string representation of this instance.
   * @returns {string} Properties of this object as a string.
   */
  toString() {
    return `\nLibrary: ${  this.libraryName  } (${  this.libraryVersion  })\n` +
            `Plugin: ${  this.pluginId  } (${  this.pluginVersion  })\n`;
  }
}
/**
 * An object of this class contains the usual ResultTuple attributes like return code, request ID and messages.
 * The results property is an array of {@link LibraryInformationResult}s.
 * @extends ResultTuple
 */
class LibraryInformationResultTuple extends ResultTuple {
  /**
   * Creates an instance of LibraryInformationResultTuple.
   * @memberof LibraryInformationResultTuple
   */
  constructor() {
    super();
  }

  /**
   * Fills the result property of the object with the supplied result set.
   * @param {Object[]} resultSet The result set of a procedure call.
   * @returns {undefined} Returns nothing/undefined.
   * @throws Throws an error, if the result set is not an array.
   */
  fillResultFromResultSet(resultSet) {
    if (resultSet instanceof Array) {
      resultSet.forEach((res) => {
        this.results.push(new LibraryInformationResult(res));
      });
    } else {
      throw new Error('Result set should be an array.');
    }
  }
}



module.exports = LibraryInformationResultTuple;