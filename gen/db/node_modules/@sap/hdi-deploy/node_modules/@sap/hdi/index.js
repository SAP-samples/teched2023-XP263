'use strict';

const DependencyResultTuple = require('./lib/result/DependencyResultTuple');
const LibraryInformationResultTuple = require('./lib/result/LibraryInformationResultTuple');
const MakeGroupResultTuple = require('./lib/result/MakeGroupResultTuple');
const MetadataResultTuple = require('./lib/result/MetadataResultTuple');
const MetadataContentResultTuple = require('./lib/result/MetadataContentResultTuple');
const StatusResultTuple = require('./lib/result/StatusResultTuple');
const ResultTuple = require('./lib/ResultTuple');

const APIPrivilege = require('./lib/parameter/APIPrivilege');
const File = require('./lib/parameter/File');
const FileWithContent = require('./lib/parameter/FileWithContent');
const Folder = require('./lib/parameter/Folder');
const FolderWithContent = require('./lib/parameter/FolderWithContent');
const HDIObject = require('./lib/parameter/HDIObject');
const LibraryConfiguration = require('./lib/parameter/LibraryConfiguration');
const Parameter = require('./lib/parameter/Parameter');
const PathParameter = require('./lib/parameter/PathParameter');
const SchemaPrivilege = require('./lib/parameter/SchemaPrivilege');
const SchemaRole = require('./lib/parameter/SchemaRole');

const HDI = require('./lib/main/HDI');
const ContainerGroup = require('./lib/main/ContainerGroup');
const Container = require('./lib/main/Container');

const HDIPromises = require('./lib/main/promises/HDIPromises');
const ContainerGroupPromises = require('./lib/main/promises/ContainerGroupPromises');
const ContainerPromises = require('./lib/main/promises/ContainerPromises');

module.exports = {
  HDI,
  ContainerGroup,
  Container,
  promises: {
    HDI: HDIPromises,
    ContainerGroup: ContainerGroupPromises,
    Container: ContainerPromises
  },
  ResultTuple,
  DependencyResultTuple,
  LibraryInformationResultTuple,
  MakeGroupResultTuple,
  MetadataResultTuple,
  MetadataContentResultTuple,
  StatusResultTuple,
  APIPrivilege,
  File,
  FileWithContent,
  Folder,
  FolderWithContent,
  HDIObject,
  LibraryConfiguration,
  Parameter,
  PathParameter,
  SchemaPrivilege,
  SchemaRole,
};