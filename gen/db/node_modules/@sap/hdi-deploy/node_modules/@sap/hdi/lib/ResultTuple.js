'use strict';
/**
 * Base class for the results returned by API calls. Does not expect any "real" results, just the return code, request ID and messages.
 */
class ResultTuple{
  /**
   * Constructor without arguments. The parameters have to be set retroactively.
   * This is necessary, because the object is first created and then passed to the function calling the procedure.
   * Return code etc. are not known at the time of object creation.
   * @constructor
   */
  constructor(){
    this.rc = null;
    this.requestId = null;
    this.messages = [];
    this.results = [];
  }

  /**
   * Fills the result property of the object with the supplied result set.
   * The result tuple does not expect a real result, so it simply throws if it receives one.
   * @param {Object[]} resultSet The result set of a procedure call.
   * @returns {undefined} Returns nothing/undefined.
   * @throws Throws an error, if the result set is not an array.
   */
  fillResultFromResultSet(resultSet) {
    if (resultSet.length !== 0){
      throw Error('No result was expected');
    }
  }
}

module.exports = ResultTuple;