import { DestinationFetchOptions } from './destination-accessor-types';
import type { Destination } from './destination-service-types';
/**
 * Get all destinations from the environment variable "destinations".
 * This is discouraged for productive use! Use {@link useOrFetchDestination} for fetching destinations from the Cloud Foundry destination service.
 *
 * @returns A list of destinations
 * @internal
 */
export declare function getDestinationsFromEnv(): Destination[];
/**
 * Get a destination from the environment variables by name. If there are multiple destinations with the same name the first one will be used.
 * This is discouraged for productive use! Use destination-accessor/useOrFetchDestination for fetching destinations
 * from the Cloud Foundry destination service.
 * @param name - Name of the destination
 * @returns The requested destination if existent, otherwise `null`
 * @internal
 */
export declare function getDestinationFromEnvByName(name: string): Destination | null;
/**
 * @internal
 */
export declare function getDestinationsEnvVariable(): string | undefined;
/**
 * @internal
 */
export declare function searchEnvVariablesForDestination(options: DestinationFetchOptions): Destination | null;
/**
 * @internal
 */
export declare function validateNameAvailable(destinationName: string, existingNames: Set<string>): void;
/**
 * @internal
 */
export declare function setDestinationsInEnv(destinations: Destination[]): void;
