const cds = require('../cds')

const convertToBoolean = boolean => {
  if (boolean === null) return null

  return Boolean(boolean)
}

const convertToDateString = value => {
  if (!value) return null

  return value
}

const convertInt64ToString = int64 => {
  if (int64 === null) return null

  return String(int64)
}

const convertToISOTime = value => {
  if (value === null) return value

  if (!value) value = 0

  return new Date(value).toISOString()
}

const convertToISONoMillis = element => {
  if (element) {
    const dateTime = new Date(element).toISOString()
    return dateTime.slice(0, 19) + dateTime.slice(23)
  }

  return null
}

const SQLITE_TYPE_CONVERSION_MAP = new Map([
  ['cds.Boolean', convertToBoolean],
  ['cds.Date', convertToDateString],
  ['cds.Integer64', convertInt64ToString],
  ['cds.Int64', convertInt64ToString],
  ['cds.DateTime', convertToISONoMillis],
  ['cds.Timestamp', convertToISOTime]
])

if (cds.env.features.bigjs) {
  // eslint-disable-next-line cds/no-missing-dependencies -- needs to be added by app dev
  const Big = require('big.js')
  const convertToBig = value => new Big(value)

  SQLITE_TYPE_CONVERSION_MAP.set('cds.Integer64', convertToBig)
  SQLITE_TYPE_CONVERSION_MAP.set('cds.Int64', convertToBig)
  SQLITE_TYPE_CONVERSION_MAP.set('cds.Decimal', convertToBig)
}

module.exports = { SQLITE_TYPE_CONVERSION_MAP }
