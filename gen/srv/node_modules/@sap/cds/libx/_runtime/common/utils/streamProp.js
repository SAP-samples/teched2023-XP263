const { ensureNoDraftsSuffix, ensureUnlocalized } = require('../../fiori/utils/handler')

const _changeStreamProperties = (target, columns, model) => {
  for (let index = 0; index < columns.length; index++) {
    const col = columns[index]
    const name = col.ref && col.ref[col.ref.length - 1]
    const element = name && target.elements[name]
    const type = element && !element['@Core.IsURL'] && element['@Core.MediaType']

    if (col.ref && type) {
      if (typeof type === 'object') {
        columns[index] = {
          ref: [...col.ref.slice(0, -1), type['=']],
          as: `${name}@odata.mediaContentType`
        }
      } else {
        columns[index] = { val: type, as: `${name}@odata.mediaContentType` }
      }
    } else if (col.expand && col.ref) {
      const tgt = target.elements[col.ref] && target.elements[col.ref].target
      tgt && _changeStreamProperties(model.definitions[ensureUnlocalized(ensureNoDraftsSuffix(tgt))], col.expand, model)
    }
  }
}

const handleStreamProperties = (target, select, model) => {
  const columns = select.SELECT.columns
  if (!columns || !target || !model) return
  if (!select.SELECT._4odata) return
  if (select._streaming) return

  _changeStreamProperties(target, columns, model)
}

module.exports = { handleStreamProperties }
